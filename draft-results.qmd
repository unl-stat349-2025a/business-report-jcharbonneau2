---
Name: Jo Charbonneau
title: "Draft: Results"
Date: 4/23/2025
---

In this data analysis, we're looking for the probability that the tornadoes will start in coastal areas and move inland. NOAA has several datasets for this, spanning from the 1950s to 2024. The data that will be used is from 2020-2024. The first step will be to start loading in all the libraries and creating a map. Though this step isn't necessarily important, it will be good to ensure that everything is running correctly and smoothly.

```{r echo=FALSE}
suppressMessages(suppressWarnings(library(dplyr)))
suppressMessages(suppressWarnings(library(ggplot2)))
suppressMessages(suppressWarnings(library(mapdata)))
suppressMessages(suppressWarnings(library(rnaturalearth)))
suppressMessages(suppressWarnings(library(sf)))
suppressMessages(suppressWarnings(library(tidyr)))
suppressMessages(suppressWarnings(library(maps)))
suppressMessages(suppressWarnings(library(stringr)))
suppressMessages(suppressWarnings(library(lubridate)))
suppressMessages(suppressWarnings(library(geosphere)))
suppressMessages(suppressWarnings(library(readr)))


world <- map_data('world')
world_plot <- ggplot(world) + 
  geom_polygon(data = world, aes(x = long, y = lat, group = group))
world_plot

#Plot the coastlines 
coastline <- ne_download(scale = 50, type = 'coastline', category = 'physical', returnclass = 'sf')

world_2 <- world_plot + 
  geom_sf(aes(geometry = geometry), color = 'orange', data = coastline)

world_2

```

Here, we can see the coastal regions highlighted in orange that ensure that everything is working correctly. Next, a map of the United States will be created, focusing on the Gulf of Mexico, Atlantic Ocean, and Pacific Ocean, but first a simple map of the United States will be plotted.

```{r echo=FALSE}

world <- map_data('world')

us_map <- world %>% filter(region == "USA")

coastline <- ne_download(scale = 50, type = 'coastline', category = 'physical', returnclass = 'sf')

us_plot <- ggplot() + 
  geom_polygon(data = us_map, aes(x = long, y = lat, group = group), fill = 'lightgray', color = 'black') + 
  geom_sf(data = coastline, color = 'black', size = 0.5) +
  coord_sf(xlim = c(-180, -60), ylim = c(15, 75), expand = FALSE) + 
  theme_minimal() + 
  labs(title = "USA With Coastlines")

us_plot


```

The US plot looks doesn't have any issues. The next step is to import the datasets from NOAA about tornadoes, ranging from 2020 to 2024. This data set will be filtered out to only include the coordinates of the Gulf, Atlantic, and Pacific before any plotting is done. 

```{r echo=FALSE}
#Imported datasets
tornado_2020 <- read.csv("StormEvents_details-ftp_v1.0_d2020_c20240620.csv.gz")
tornado_2021 <- read.csv("StormEvents_details-ftp_v1.0_d2021_c20250401.csv.gz")
tornado_2022 <- read.csv("StormEvents_details-ftp_v1.0_d2022_c20250401.csv.gz")
tornado_2023 <- read.csv("StormEvents_details-ftp_v1.0_d2023_c20250401.csv.gz")
tornado_2024 <- read.csv("StormEvents_details-ftp_v1.0_d2024_c20250401.csv.gz")

tornado_2020_2024 <- rbind(
  tornado_2024,
  tornado_2023,
  tornado_2022,
  tornado_2021,
  tornado_2020
)

#Clean out the data and obtain coordinates with the coasts and the Gulf of Mexico
tornado_2020_2024_clean <- tornado_2020_2024 %>%
  drop_na(BEGIN_LAT, BEGIN_LON, END_LAT, END_LON) %>%
  filter(
    (BEGIN_LON >= -98 & BEGIN_LON <= -81 & BEGIN_LAT >= 18 & BEGIN_LAT <= 32)| #Gulf of Mexico
    (BEGIN_LON >= -80 & BEGIN_LON <= -60 & BEGIN_LAT >= 20 & BEGIN_LAT <= 45)| #Atlantic Ocean
    (BEGIN_LON >= -180 & BEGIN_LON <= -110 & BEGIN_LAT >= 0 & BEGIN_LAT <= 45)) %>% #Pacific Ocean
  filter(EVENT_TYPE == 'Waterspout') %>%
    filter(END_TIME - BEGIN_TIME >= 20)
```

This data is cleaned out and filtered to use Waterspout from the event type. Since we're looking at tornadoes that have the potential to pick up and transfer sharks, we'd definitely want to look at something over the water. According to NOAA, the average waterspout lasts two to twenty minutes. With this information in mind, it can be gathered that any waterspout lasting longer would likely be much stronger than average. Because the EF scales come up as null values for this data set, we'll stick with the duration of the waterspout and make assumptions from there. This would also give the tornado ample time to travel onto land.

Now, the shark data is imported. This will also be filtered out with the respective latitudinal and longitudinal coordinates, and will be plotted when the data is cleaned out using the Albers Equal Area (AEA) projection. 

```{r echo=FALSE}
shark_data <- read.csv("NMFS BLL data Susan V - Stations.csv")

##Clean up the shark data
shark_clean <- shark_data %>%
  rename(
    Latitude = 'Station.Latitude',
    Longitude = 'Station.Longitude'
  ) %>%
  filter(!is.na(Latitude), !is.na(Longitude))

shark_location <- shark_clean %>%
  filter(
    (Longitude >= -98 & Longitude <= -81 & Latitude >= 18 & Latitude <= 32) |
    (Longitude >= -80 & Longitude <= -60 & Latitude >= 20 & Latitude <= 45) |
    (Longitude >= -180 & Longitude <= -110 & Latitude >= 0 & Latitude <= 45)
  )

#Plot and convert to AEA projection
shark_sf <- st_as_sf(shark_location, coords = c("Longitude", "Latitude"), crs = 4326)

aea_crs <- st_crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96")

shark_aea <- st_transform(shark_sf, crs = aea_crs)

bbox <- st_bbox(shark_aea)

us_states <- ne_states(country = "United States of America", returnclass = "sf")

us_plot <- ggplot(data = us_states) +
  geom_sf(fill = "lightgray", color = "black") +
  theme_minimal() +
  theme(legend.position = "none")

shark_plot <- ggplot() +
  geom_sf(data = us_states, fill = 'lightgrey', color = 'black') +
  geom_sf(data = shark_aea, color = 'blue', size = 1, alpha = 0.7) +
  coord_sf(
    crs = aea_crs, 
    xlim = c(bbox['xmin'], bbox['xmax']),
    ylim = c(bbox['ymin'], bbox['ymax'])
  ) +
  labs(
    title = 'Shark Station Locations',
    subtitle = 'Stations Monitored by NMFS',
    caption = 'Projection: Albers Equal Area (AEA)') +
  theme_minimal()

shark_plot
```

The plot above displays the shark station locations in conjunction with the United States. As the plot shows, the majority of the locations are in the Gulf of Mexico.

Using an AEA projection, the shark data will be matched with the tornado/waterspout data. This will allow for a visual of the waterspouts that are strong enough to carry marine life that also overlap with shark habitats. 

```{r}
library(rnaturalearthhires)

tornado_near_sharks_sf <- st_as_sf(
  tornado_near_sharks,
  coords = c("BEGIN_LON", "BEGIN_LAT"),
  crs = 4326
)

us_map <- ne_states(country = 'united states of america', returnclass = 'sf')

tornado_shark_plot_sf <- ggplot() +
  geom_sf(data = us_map, fill = 'grey', color = 'white') + 
  geom_sf(data = tornado_near_sharks_sf, color = 'red', size = 2, alpha = 0.7) +
  coord_sf(crs = st_crs('+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96')) + 
  labs(
    title = 'Waterspouts Near Shark Locations',
    subtitle = 'Using ALbers Equal Area Projection',
    caption = 'Sources: NOAA, USGS'
  ) +
  theme_minimal()

tornado_shark_plot_sf

```
The data points in red show the overlap between waterspouts of a duration longer than 20 minutes and shark habitats. There are roughly sixteen noted points of overlap, mostly in the Gulf of Mexico with some moving along the Florida Peninsula and a few along the Atlantic Coast. 

Next, the focus will be on the probability of these sharks overlapping with tornadoes moving inland. 

```{r echo=FALSE}
#Now, let's calculate the probability of one of those waterspout tornadoes with sharks moving inland, starting with the waterspout probability

n_total_tornadoes <- nrow(tornado_2020_2024)

n_sharks <- nrow(shark_clean)

n_waterspouts <- nrow(tornado_2020_2024_clean)

#Calculate the tornadoes that started off shore, but landed inland
n_land_waterspouts <- tornado_2020_2024_clean %>%
  filter(BEGIN_LON < -81 & BEGIN_LAT < 32, END_LAT > BEGIN_LAT) %>%
  nrow()

shark_location <- unlist(shark_location)
shark_location <- as.numeric(shark_location)

#Now, let's calculate the probabilities 
p_waterspout <- n_waterspouts/n_total_tornadoes
p_land <- n_land_waterspouts/n_total_tornadoes
p_shark_location <- shark_location/n_sharks

#Let's calculate the probability of the sharks in the region moving inland
probability <- p_waterspout * p_land * p_shark_location
probability[1]
```

The probability here is very, very low, nearing almost zero. Because of this, it's clear that the probability of a tornado that contains a shark moving inland is nearly impossible with each of the circumstances having to align. 

```{r include = FALSE}


#Cleaning up the code in quarto to prevent issues with the rendering being messy 

suppressPackageStartupMessages({
  suppressWarnings({
    library(ggplot2)
    library(mapdata)
    library(maps)
    library(sf)
    library(rnaturalearth)
    library(stringr)
    library(lubridate)
  })
})

```
